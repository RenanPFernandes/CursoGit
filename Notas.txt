Git e GitHub

Git faz snapshot de todos os arquivos em cada versão, ao contrário do SVN que guarda as difs entre cada versão
Git nasceu para versionamento do Linux, após quebra com a BitKeeper
Git config - Geral
Git config user - Usuário
Git config projeto - Projeto

File Lifecycle
Untracked: arquivo acabou de ser adicionado no repositório, mas ainda não foi visto pelo Git. Não foi dado o commit?
Unmodified: arquivo já commitado e parte do repositório, sem alterações quando comparado com o que está no repositório do Git
Modified: arquivo do repositório com modificações
Staged: área onde será criada a versão quando for dado o commit, tipo aquela lista de checagem de modificaçoes que o SVN tem no pré-commit

Untracked > ADD FILE > Unmodified
Unmodified > REMOVE FILE > Untracked
Unmodified > EDIT > Modified
Modified > STAGE FILE > Staged
Staged > COMMIT > Unmodified

Comandos Git
git status: status da pasta (semelhante a opção de check for modifications do SVN)
git add: adiciona um untracked para ser commitado (staging)
    Se, depois que dei o add em um arquivo, eu modificar esse arquivo sem dar o commit, o que vai ser commitado é a primeira versão, náo as com alterações!!!
    Para que as modificações sejam commitadas, em vez do arquivo original, precisa dar git add de novo!
git commit: dá o commit das atuais alterações etc, criando o snapshot
    1) -m "Mensagem": para incluir uma mensagem de comentário do commit
    2) [master (root-commit) XXXXXX] Mensagem
          master (root-commit): local onde foi feito o commit
          XXXXXXX: número do commit 
          Mensagem: Comentário do commit
    3) se der commit sem antes ter dado o add das moficições, emite um erro avisando "Changes not staged for commit"e não faz nada
    4) -am "Mensagem": adiciona e da commit automaticamente se o arquivo já existir no repositório 
git log: emite o log dos commits do projeto
    1) Apresenta a Hash do Commit, o autor, data e comentário
    2) --decorate: mais informações, como tags e branches
    3) --author="Name": filtrar apenas commits de um autor
    4) git shortlog: informaçoes da quantidade de commits de cada autor, de cada commit etc
       git shortlog - sn: autor e quantidade de commits
    5) --graph: mostra em forma gráfica branches, versões e trunk
git show HASH: mostra mais informações de cada commit identificado pela hashtag do commit
git diff: mostra a modificação
    1) --name-only: diz apenas o nome do arquivo modificado
git checkout ARQUIVO: revert das mudanças aatuais para a versão mais recente do repositório
git reset HEAD ARQUIVO: remove o arquivo do staged, mas mantém as mudanças realizadas, diferentemente do checkout
    1) Se não colocar o ARQUIVO, ele faz o reset HEAD para todos os arquivos da pasta



